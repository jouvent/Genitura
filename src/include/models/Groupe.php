<?php

/**
 * Groupe
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Groupe extends BaseGroupe
{

    static function fetch($id)
    {
        $q = Doctrine_Query::create()
                ->from('Groupe g')
                ->leftJoin('g.Chief c')
                ->leftJoin('g.Buses b')
                ->where('g.id = ?', $id);
        return $q->fetchOne();
    }

    static function oneInCollection($id)
    {
        $q = Doctrine_Query::create()
                ->from('Groupe g')
                ->where('g.id = ?', $id);
        return $q->execute();
    }

    static function fetchUsers($id)
    {
        $q = Doctrine_Query::create()
                ->from('Groupe g')
                //->leftJoin('g.Users u')
                //->leftJoin('u.Bus b')
                //->leftJoin('u.Groupe ug')
                ->where('g.id = ?', $id);
        return $q->fetchOne();
    }

    static function all()
    {
        $q = Doctrine_Query::create()
                ->select('g.*, c.*, COUNT(DISTINCT b.id) as nb_buses, COUNT(DISTINCT u.id) as nb_users')
                ->from('Groupe g')
                ->leftJoin('g.Chief c')
                ->leftJoin('g.Users u')
                ->leftJoin('g.Buses b')
                ->groupBy('g.id');
        return $q->execute();
    }

    static function summary()
    {
        $q = Doctrine_Query::create()
            ->select('
                COUNT( DISTINCT g.id) as nb_groups,
                COUNT( DISTINCT b.id) as nb_buses,
                COUNT( DISTINCT u.id) as nb_users')
                ->from('Groupe g')
                ->leftJoin('g.Users u')
                ->leftJoin('g.Buses b');
        $summary = $q->fetchOne()->toArray();

        $q = Doctrine_Query::create()
            ->select('
                SUM( g.size) as sum_size')
                ->from('Groupe g');
        $size = $q->fetchOne()->toArray();
        $summary['sum_size'] = $size['sum_size'];
        return $summary;
    }

    static function update_from_post(Groupe $group)
    {
        if(!empty($_POST['group_size'])){
            $group->size = $_POST['group_size'];
        }
        $group->name = $_POST['group_name'];
        return $group;
    }

    static function create_from_post()
    {
        $session = get_session();

        $group = new Groupe();
        return Groupe::update_from_post($group);
    }

    public function groupsICanSee($user)
    {
        if($user->isAdmin())
            return Groupe::all();
        return Groupe::oneInCollection($user->fk_group_id);
    }

}
