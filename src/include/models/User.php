<?php
/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */

/**
 * models/User.php
 *
 * php version 5
 *
 * @category Model
 * @package  Users_Model
 * @author   julien jouvent-halle <julienhalle@heptacube.com>
 * @license  http://www.opensource.org/licenses/mit-license.php mit license
 * @link     http://github.com/jouvent/genitura
 * @since    0.0.2
 */

/**
 * User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @category Model
 * @package  Users_Model
 * @author   julien jouvent-halle <julienhalle@heptacube.com>
 * @license  http://www.opensource.org/licenses/mit-license.php mit license
 * @link     http://github.com/jouvent/genitura
 * @since    0.0.2
 */
class User extends BaseUser
{
    /**
     * setUp 
     * 
     * @access public
     * @return void
     */
    public function setUp()
    {
        parent::setUP();
        $this->hasMutator('password', 'setPassword');
    }

    /**
     * setPassword 
     * 
     * @param string $password a non encrypted password
     *
     * @access public
     * @return void
     */
    public function setPassword($password)
    {
        $this->_set('password', md5($password));
    }

    /**
     * fetch 
     * 
     * @param mixed $id the unique identifier
     *
     * @static
     * @access public
     * @return void
     */
    static function fetch($id)
    {
        return Doctrine::getTable('User')->find($id);
    }

    /**
     * getByCredential 
     * 
     * @param string $username the user login
     * @param string $password the user password
     *
     * @static
     * @access public
     * @return void
     */
    static function getByCredential($username, $password)
    {
        $q = Doctrine_Query::create()
            ->from('User u')
            ->where('u.username = ?', $username)
            ->andWhere('u.password = ?', md5($password))
            ->andWhere('u.is_deleted = 0');
        return $q->fetchOne();
    }
}
